{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","componentDidMount","fetch","then","resp","json","users","setState","e","target","value","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAaeA,G,MAVF,SAAAC,GACX,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCMTC,G,MAVE,SAAAR,GACf,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,WCK9BO,G,YAVG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBAAOZ,UAAU,SACXa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCLG,EAtCf,4MACEC,MAAQ,CACNR,SAAU,GACVS,YAAa,IAHjB,EAMEC,kBAAoB,WAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,QAT9C,EAYEX,aAAe,SAACa,GACd,EAAKD,SAAS,CAACP,YAAaQ,EAAEC,OAAOC,SAbzC,uDAgBY,IAAD,EACyBC,KAAKZ,MAA9BR,EADA,EACAA,SAAUS,EADV,EACUA,YAGXY,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQG,KAAK0B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcgB,KAAKhB,eAGrB,cAAC,EAAD,CAAUJ,SAAUqB,WAhC5B,GAAyBI,aCAzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70f6f488.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nconst CardList = props => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map(monster => (\r\n        <Card monster={monster} key={monster.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input className='search'\r\n          type=\"search\"\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, {Component} from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport \"./App.css\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nexport class App extends Component {\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n\n  componentDidMount = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(resp => resp.json())\n      .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n\n    // filter: pokud lowerCased \"monster.name\" obsahuje \"searchField\"\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App' >\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}